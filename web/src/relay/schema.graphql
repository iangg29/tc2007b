schema {
  query: RootQuery
  mutation: RootMutation
}

"""Exposes a URL that specifies the behaviour of this scalar."""
directive @specifiedBy(
  """The URL that specifies the behaviour of this scalar."""
  url: String!
) on SCALAR

"""
Main application model, contains all the information related with the applications of the users into the system
"""
type Application {
  """Application ID"""
  id: ID!

  """User that uploaded the request"""
  user: User!

  """Application title"""
  title: String!

  """Date at which the project will be erased from consideration"""
  deadline: String

  """Date at which the user compromises to start their project"""
  start_time: String

  """Date at which the user compromises to finish their project"""
  end_time: String

  """Application emission date"""
  emission_date: String!

  """Application response date"""
  response_date: String!

  """Application status"""
  applicationStatus: ApplicationStatus!

  """Citation of the application"""
  citation: Citation!

  """Application creation date"""
  created_at: String!

  """Last time application was updated"""
  updated_at: String!

  """Aplication status ID"""
  application_status_id: ID!

  """User ID"""
  user_id: ID!

  """Citation ID"""
  citation_id: ID!
}

"""Assignable Application Status"""
type ApplicationStatus {
  """ApplicationStatus ID"""
  id: ID!

  """ApplicationStatus name"""
  name: String!

  """ApplicationStatus creation date"""
  created_at: String!

  """Last time applicationStatus was updated."""
  updated_at: String!
}

"""Authentication response."""
type AuthenticationResponse {
  """Is authentication successful."""
  success: Boolean!

  """Authentication error message."""
  error: String

  """Authenticated user"""
  user: User
}

"""
Citation model that contains the document and information the users has to follow in order to get their scholarship
"""
type Citation {
  """Citation's ID"""
  id: ID!

  """Citation's title"""
  title: String!

  """Citation's description"""
  description: String!

  """Citation's document"""
  document: Document!

  """Citation's creation date"""
  created_at: String!

  """Last time citation was updated"""
  updated_at: String!

  """Citation's end date"""
  end_date: String!
}

"""
Document model, contains all the specifications of the documents uploaded by the users
"""
type Document {
  """Document's ID"""
  id: ID!

  """User that uploaded the document"""
  user: User!

  """Document's name"""
  name: String!

  """Document's type"""
  documentType: DocumentType!

  """Document's creation date"""
  created_at: String!

  """Last time document got updated"""
  updated_at: String!
}

"""Type of document uploaded"""
type DocumentType {
  """Document Type ID"""
  id: ID!

  """Document Type name"""
  name: String!

  """Document Type creation date"""
  created_at: String!

  """Last time Document Type was updated"""
  updated_at: String!
}

"""Label assigned to each application"""
type Label {
  """Label's ID"""
  id: ID!

  """Label's name"""
  name: String!

  """Label's description"""
  description: String!

  """Label's creation date"""
  created_at: String!

  """Last time label was updated"""
  updated_at: String!
}

"""Assignable role to users."""
type Role {
  """Role ID"""
  id: ID!

  """Role name"""
  name: String!

  """Role description"""
  description: String!

  """Is role default."""
  default: Boolean!

  """Role creation date"""
  created_at: String!

  """Last time role was updated."""
  updated_at: String!
}

"""Application's GraphQL root mutations"""
type RootMutation {
  createRole(name: String!, description: String!): Role
  createApplication(user_id: ID!, title: String!, deadline: String, end_time: String, emission_date: String!, response_date: String!, application_status_id: ID!, citation_id: ID!): Application
  deleteApplication(id: ID!): Boolean
  login(email: String!, password: String!): AuthenticationResponse
  signup(name: String!, first_lastname: String!, second_lastname: String!, cellphone: String!, email: String!, gender: String!, password: String!, confirm_password: String!): AuthenticationResponse
  createStatus(
    """ApplicationStatus name"""
    name: String!
  ): ApplicationStatus
  deleteStatus(id: ID!): Boolean
  createCitation(title: String!, description: String!, document_id: String!, end_date: String!): Citation
  createDocument(file_name: String!): Document
  createDocumentType(name: String!): DocumentType
}

"""Application's GraphQL root query."""
type RootQuery {
  users: [User]
  roles: [Role]
  applicationStatus: [ApplicationStatus]
  documentTypes: [DocumentType]
  documents: [Document]
  citations: [Citation]
  labels: [Label]
  applications: [Application]
  applicationStatusID(application_status_id: String!): [Application]
}

"""
Main application user model, contains all user information w/it's relations.
"""
type User {
  """User's ID"""
  id: ID!

  """User's role"""
  role: Role

  """User's name"""
  name: String!

  """User's first lastname"""
  first_lastname: String!

  """User's second lastname"""
  second_lastname: String!

  """User's phone"""
  cellphone: String!

  """User's email"""
  email: String!

  """User status"""
  status: Int!

  """User's active status"""
  active: Boolean!

  """User's profile creation date."""
  created_at: String!

  """Last time user profile got updated"""
  updated_at: String!
}

