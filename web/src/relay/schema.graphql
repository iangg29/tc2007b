schema {
  query: RootQuery
  mutation: RootMutation
}

"""Exposes a URL that specifies the behaviour of this scalar."""
directive @specifiedBy(
  """The URL that specifies the behaviour of this scalar."""
  url: String!
) on SCALAR

"""Assignable Application Status"""
type ApplicationStatus {
  """ApplicationStatus ID"""
  id: ID!

  """ApplicationStatus name"""
  name: String!

  """ApplicationStatus creation date"""
  created_at: String!

  """Last time applicationStatus was updated."""
  updated_at: String!
}

"""Authentication response."""
type AuthenticationResponse {
  """Is authentication successful."""
  success: Boolean!

  """Authentication error message."""
  error: String

  """Authenticated user"""
  user: User
}

"""Frequent question & answer."""
type FAQ {
  """FAQ ID"""
  id: ID!

  """FAQ Question"""
  question: String!

  """FAQ Answer"""
  answer: String!

  """FAQ visibility"""
  visible: Boolean!

  """FAQ creation date"""
  created_at: String!

  """Last time FAQ was updated."""
  updated_at: String!
}

"""Assignable role to users."""
type Role {
  """Role ID"""
  id: ID!

  """Role name"""
  name: String!

  """Role description"""
  description: String!

  """Is role default."""
  default: Boolean!

  """Role creation date"""
  created_at: String!

  """Last time role was updated."""
  updated_at: String!
}

"""Application's GraphQL root mutations"""
type RootMutation {
  createRole(name: String!, description: String!, is_default: Boolean): Role
  login(email: String!, password: String!): AuthenticationResponse
  signup(name: String!, first_lastname: String!, second_lastname: String!, cellphone: String!, email: String!, gender: String!, password: String!, confirm_password: String!): AuthenticationResponse
  createFAQ(question: String!, answer: String!, visible: Boolean): FAQ
  toggleFAQVisibility(id: ID!, visible: Boolean!): FAQ
  updateFAQ(id: ID!, question: String!, answer: String!, visible: Boolean!): FAQ
  deleteFAQ(id: ID!): Boolean
}

"""Application's GraphQL root query."""
type RootQuery {
  users: [User]
  roles: [Role]
  applicationStatus: [ApplicationStatus]
  faqs: [FAQ]
}

"""
Main application user model, contains all user information w/it's relations.
"""
type User {
  """User's ID"""
  id: ID!

  """User's role"""
  role: Role

  """User's name"""
  name: String!

  """User's first lastname"""
  first_lastname: String!

  """User's second lastname"""
  second_lastname: String!

  """User's phone"""
  cellphone: String!

  """User's email"""
  email: String!

  """User status"""
  status: Int!

  """User's active status"""
  active: Boolean!

  """User's profile creation date."""
  created_at: String!

  """Last time user profile got updated"""
  updated_at: String!
}

